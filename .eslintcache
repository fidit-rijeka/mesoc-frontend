[{"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\reportWebVitals.js":"1","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\MyDocuments.js":"2","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\infoModal.js":"3","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\UploadDocument.js":"4","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navSearchField.js":"5","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\fileDropzone.js":"6","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\sidenav.js":"7","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\filePreview.js":"8","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SignUp.js":"9","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SignIn.js":"10","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\App.js":"11","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\Analysis.js":"12","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\heatmap.js":"13","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\Browse.js":"14","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\graph.js":"15","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navbar.js":"16","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\analysisLoader.js":"17","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\index.js":"18","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\documentList.js":"19","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SendFeedback.js":"20"},{"size":362,"mtime":1607023625345,"results":"21","hashOfConfig":"22"},{"size":8744,"mtime":1608922169228,"results":"23","hashOfConfig":"22"},{"size":915,"mtime":1608922298299,"results":"24","hashOfConfig":"22"},{"size":6854,"mtime":1609015084701,"results":"25","hashOfConfig":"22"},{"size":402,"mtime":1607111692950,"results":"26","hashOfConfig":"22"},{"size":982,"mtime":1607869476139,"results":"27","hashOfConfig":"22"},{"size":4287,"mtime":1607110208188,"results":"28","hashOfConfig":"22"},{"size":309,"mtime":1607551042192,"results":"29","hashOfConfig":"22"},{"size":6457,"mtime":1608918523608,"results":"30","hashOfConfig":"22"},{"size":3447,"mtime":1608914884542,"results":"31","hashOfConfig":"22"},{"size":2090,"mtime":1608915585570,"results":"32","hashOfConfig":"22"},{"size":6285,"mtime":1608921216714,"results":"33","hashOfConfig":"22"},{"size":1566,"mtime":1608065928864,"results":"34","hashOfConfig":"22"},{"size":317,"mtime":1607110131627,"results":"35","hashOfConfig":"22"},{"size":420,"mtime":1608119176281,"results":"36","hashOfConfig":"22"},{"size":947,"mtime":1608915443688,"results":"37","hashOfConfig":"22"},{"size":318,"mtime":1608119140917,"results":"38","hashOfConfig":"22"},{"size":571,"mtime":1607027759405,"results":"39","hashOfConfig":"22"},{"size":1750,"mtime":1608121434045,"results":"40","hashOfConfig":"22"},{"size":3223,"mtime":1609015108022,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"wfmgou",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\reportWebVitals.js",[],["88","89"],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\MyDocuments.js",["90"],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\infoModal.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\UploadDocument.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navSearchField.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\fileDropzone.js",["91"],"import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst FileDropzone = ({ setFile, setInvalid }) => {\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setInvalid(null);\r\n    if(acceptedFiles.length === 0) {\r\n      setInvalid('Only .pdf and .txt files are supported.');\r\n      return;\r\n    }\r\n    if(acceptedFiles.length > 1) {\r\n      setInvalid('Please upload only one document.');\r\n      return;\r\n    }\r\n    setFile(acceptedFiles);\r\n    console.log(acceptedFiles);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop, accept: '.pdf, .txt'});\r\n\r\n  return(\r\n    <div className=\"dropArea\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p className=\"dtActive\">Drop here!</p> :\r\n          <p className=\"dtPassive\">Drag and drop your document or click to open file explorer.</p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileDropzone;","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\sidenav.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\filePreview.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SignUp.js",["92","93","94","95"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, CardBody, Card, Alert, Container, Label } from \"reactstrap\";\r\nimport { AvForm, AvField, AvInput, AvGroup } from 'availity-reactstrap-validation';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from 'axios';\r\n\r\nimport logo from '../images/mesocLogoBlue.png';\r\n\r\nconst SignUp = props => {\r\n\r\n  const [err, setErr] = useState(null);\r\n  const [succ, setSucc] = useState(false);\r\n  const [wait, setWait] = useState(false);\r\n  const [danger, setDanger] = useState(false);\r\n  const [capCheck, setCapCheck] = useState(false);\r\n\r\n  const handleValidSubmit = e => {\r\n    // TODO:\r\n    // Add all password validations (see api documentation).\r\n    if(e.target.password.value !== e.target.repeatPassword.value) {\r\n      setErr('Passwords don\\'t match. Please try again.');\r\n      return;\r\n    }\r\n    if(!capCheck) {\r\n      setErr('Please confirm that you are not a robot.');\r\n      return;\r\n    }\r\n\r\n    // TODO:\r\n    // Send data to backend. Display message acordingly to backend response\r\n    setWait(true);\r\n    // axios\r\n    //   .post('http://localhost:7000/users/', {\r\n    //     email: e.target.email.value,\r\n    //     password: e.target.password.value\r\n    //   }, {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //       \"Access-Control-Allow-Origin\": \"*\"\r\n    //     }\r\n    //   })\r\n    //   .then(response => {\r\n    //     console.log(response);\r\n    //     setWait(false);\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //     setWait(false);\r\n    //   });\r\n\r\n    setTimeout(() => {\r\n      setWait(false);\r\n      //setDanger(true);\r\n      setSucc(true);\r\n    }, 1500);\r\n  };\r\n\r\n  return(\r\n    <div className=\"signInWrapper\">\r\n      {succ &&\r\n        <SweetAlert\r\n          title=\"A verification link has been sent to your email account.\"\r\n          success\r\n          confirmBtnBsStyle=\"btn btn-primary wawes-effect waves-light\"\r\n          onConfirm={() => {props.history.push('/browse')}}\r\n        >\r\n          Please click on the link that has just been sent to your email account to verify your email and continue the registration process. Be sure to check your spam folder.\r\n        </SweetAlert>\r\n      }\r\n      {danger &&\r\n        <SweetAlert\r\n          title=\"Oops!\"\r\n          danger\r\n          onConfirm={() => {setDanger(false)}}\r\n        >\r\n          Something went wrong.\r\n        </SweetAlert>\r\n      }\r\n      <div className=\"account-pages my-5 pt-sm-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={5} lg={6} xl={5}>\r\n              <Card className=\"overflow-hidden\">\r\n                <div className=\"bg-soft-primary\">\r\n                  <Row>\r\n                    <Col className=\"col-7\">\r\n                      <div className=\"text-primary p-4\">\r\n                        <h5 className=\"text-primary\">Welcome!</h5>\r\n                        <p>Create your MESOC account.</p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <CardBody className=\"pt-0\">\r\n                <div>\r\n                  <Link to=\"/browse\">\r\n                    <div className=\"avatar-md profile-user-wid mb-4\">\r\n                      <span className=\"avatar-title rounded-circle bg-light\">\r\n                        <img src={logo} alt=\"\" className=\"rounded-circle\" height=\"34\" />\r\n                      </span>\r\n                    </div>\r\n                  </Link>\r\n                  <div className=\"p-2\">\r\n                    <AvForm className=\"form-horizontal\" onValidSubmit={e => handleValidSubmit(e)}>\r\n\r\n                      {err && <Alert color=\"danger\">{err}</Alert>}\r\n                      {wait && <Alert color=\"secondary\">Please wait.</Alert>}\r\n\r\n                      <div className=\"form-group\">\r\n                        <AvField onInput={() => setErr(null)} name=\"email\" label=\"Email\" className=\"form-control\" type=\"email\" required />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <AvField onInput={() => setErr(null)} name=\"password\" label=\"Password\" className=\"form-control\" type=\"password\" required />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <AvField onInput={() => setErr(null)} name=\"repeatPassword\" label=\"Repeat password\" className=\"form-control\" type=\"password\" required />\r\n                      </div>\r\n\r\n                      {/* TODO:\r\n                      Link these to actual Terms & Tonditions and Privacy policy */}\r\n                      <AvGroup check>\r\n                        <Label  className=\"mb-4\" check>\r\n                          <AvInput type=\"checkbox\" name=\"agree\" required />\r\n                          <span className=\"fs95\">By checking this box, you are acknowledging that you have read, understood, and accept our <a href=\"#\" target=\"_blank\" className=\"font-weight-medium text-primary fs95\">Terms & Conditions</a> and <a href=\"#\" target=\"_blank\" className=\"font-weight-medium text-primary fs95\">Privacy Policy</a>, and that you consent to our use of your personal data as described in our <a href=\"#\" target=\"_blank\" className=\"font-weight-medium text-primary fs95\">Privacy Policy</a>. Also you grant us the permission to process, analyze and store uploaded documents.</span>\r\n                        </Label>\r\n                      </AvGroup>\r\n\r\n                      {/* TODO:\r\n                      Add official mesoc recaptcha here */}\r\n                      <ReCAPTCHA\r\n                        sitekey=\"6LcMGQ8aAAAAANsNdayJ6eaZx0q-U8wz3v-4pBBS\"\r\n                        onChange={() => setCapCheck(true)}\r\n                        onErrored={() => setCapCheck(false)}\r\n                        onExpired={() => setCapCheck(false)}\r\n                      />\r\n\r\n                      <div className=\"mt-3\">\r\n                        <button className=\"btn btn-primary btn-block wawes-effect waves-light\" type=\"submit\">Create account</button>\r\n                      </div>\r\n\r\n                    </AvForm>\r\n                  </div>\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SignIn.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\App.js",["96"],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\Analysis.js",["97"],"import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Row, Col, Button } from \"reactstrap\";\r\n\r\nimport Sidenav from '../components/sidenav';\r\nimport Heatmap from '../components/heatmap';\r\nimport Graph from '../components/graph';\r\nimport AnalysisLoader from '../components/analysisLoader';\r\nimport DocumentList from '../components/documentList';\r\n\r\nlet options = null;\r\nlet series = null;\r\n\r\nconst Analysis = ({ match }) => {\r\n\r\n  const [cells, setCells] = useState(null);\r\n  const [selectedCell, setSelectedCell] = useState(null);\r\n  const [cellSim, setCellSim] = useState(null);\r\n  const [vars, setVars] = useState(null);\r\n  const [selectedVar, setSelectedVar] = useState(null);\r\n  const [varSim, setVarSim] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // TODO:\r\n    // Fetch cell data based on url params and set it to state\r\n    setTimeout(() => {\r\n      setCells(require('../testData/celije.json').cells);\r\n    }, 1000)\r\n    console.log(match.params.analysisType, match.params.analysisKey);\r\n  }, []);\r\n\r\n  const fetchGraph = (cell) => {\r\n    setVars(null);\r\n    setCellSim(null);\r\n    // If deselecting cell clear cell data.\r\n    if(selectedCell === cell) {\r\n      setSelectedCell(null);\r\n      return;\r\n    }\r\n\r\n    setSelectedCell(cell);\r\n    // TODO:\r\n    // Fetch variable data based on input (selected cell).\r\n    // Fetch similar by cell.\r\n    const varsTemp = require('../testData/varijable.json').vars;\r\n\r\n    let labels = [];\r\n    let percentages = [];\r\n    async function setData() {\r\n      await varsTemp.forEach(element => {\r\n        labels.push(element.name);\r\n        percentages.push(parseInt(element.strength * 100));\r\n      });\r\n\r\n      // Settings for graph rendering.\r\n      options = {\r\n        chart: {\r\n          id: 'mesoc-graph',\r\n          events: {\r\n            dataPointSelection: function(event, chartContext, config) {\r\n              setVarSim(null);\r\n              if(config.selectedDataPoints[0][0] !== config.dataPointIndex) {\r\n                setSelectedVar(null);\r\n                return;\r\n              }\r\n              setSelectedVar(config.dataPointIndex);\r\n              // TODO:\r\n              // Fetch similar by variable.\r\n              setTimeout(() => setVarSim(require('../testData/simm.json').similar), 1000);\r\n            }\r\n          }\r\n        },\r\n        xaxis: {\r\n          categories: labels,\r\n          labels: {\r\n            show: true,\r\n            formatter: val => {\r\n              if(val.length > 22) {\r\n                return `${val.slice(0, 20)}...`\r\n              }\r\n              return val;\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            formatter: val => `${val} %`\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: val => `${val} %`,\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: '12px',\r\n            colors: [\"#303030\"]\r\n          }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            dataLabels: {\r\n              position: 'top'\r\n            }\r\n          }\r\n        },\r\n        colors: ['#5A74AC']\r\n      };\r\n      series = [{\r\n        name: 'effect',\r\n        data: percentages\r\n      }];\r\n\r\n      setTimeout(() => {\r\n        setVars(varsTemp);\r\n        setCellSim(require('../testData/simm.json').similar);\r\n      }, 1000)\r\n    };\r\n\r\n    setData();\r\n  };\r\n\r\n  return(\r\n    <div className=\"pageWrapper\">\r\n      <div className=\"sidenavArea\">\r\n        <Sidenav />\r\n      </div>\r\n      <div className=\"pageArea\">\r\n        {/* TODO:\r\n        Create dynamic page header here to display document title or city. */}\r\n        <Row>\r\n          <Col lg=\"4\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>MESOC matrix</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">Impact of variables per cell in a given document</CardSubtitle>\r\n                {cells ?\r\n                  <Heatmap\r\n                    data={cells}\r\n                    selectedCell={selectedCell}\r\n                    fetchGraph={fetchGraph}\r\n                  /> :\r\n                  <AnalysisLoader height='550px' />\r\n                }\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"8\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>MESOC Graph</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">Distribution of variables impacting selected cell</CardSubtitle>\r\n                {selectedCell !== null ?\r\n                  <Graph vars={vars} options={options} series={series} /> :\r\n                  <div className=\"analysisEmpty\" style={{ height: '550px' }}>No cell selected</div>\r\n                }\r\n                {/* TODO:\r\n                Fetch data and display variable decomposition screen (as a modal) on click of this button. */}\r\n                <Button onClick={() => console.log(selectedVar)} color=\"secondary\" className=\"ml-3\" disabled={selectedVar === null}>See decomposition</Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"6\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>Similar documents</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">Document similarity by selected cell</CardSubtitle>\r\n                {selectedCell !== null ?\r\n                  <DocumentList docs={cellSim} /> :\r\n                  <div className=\"analysisEmpty\" style={{ height: '200px' }}>No cell selected</div>\r\n                }\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"6\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>Similar documents</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">Document similarity by selected variable</CardSubtitle>\r\n                {selectedVar !== null ?\r\n                  <DocumentList docs={varSim} /> :\r\n                  <div className=\"analysisEmpty\" style={{ height: '200px' }}>No variable selected</div>\r\n                }\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Analysis);","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\heatmap.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\Browse.js",[],["98","99"],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\graph.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navbar.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\analysisLoader.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\index.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\documentList.js",["100"],"import React from 'react';\r\n\r\nimport AnalysisLoader from './analysisLoader';\r\n\r\nconst DocumentList = ({ docs }) => {\r\n  return(\r\n    <React.Fragment>\r\n      {docs ?\r\n        <div className=\"dlContainer\">\r\n          {docs.map(doc => {\r\n            return <a href=\"#\" target=\"_blank\" className=\"docContainer\">\r\n              <svg className=\"docIcon\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m23.589 22.261-2.102-2.101c.51-.769.814-1.713.814-2.728 0-2.389-1.683-4.385-3.929-4.866l-.033-.006v-4.043c0-.009 0-.018 0-.026 0-.246-.088-.471-.233-.646l.001.002v-.005c-.019-.023-.039-.045-.06-.066l-.008-.009c-.009-.009-.018-.018-.027-.027l-7.44-7.44c-.021-.021-.042-.04-.065-.059l-.026-.018c-.016-.013-.033-.026-.05-.038l-.025-.018c-.018-.012-.036-.022-.054-.034l-.023-.012q-.034-.02-.075-.037l-.032-.013-.051-.018-.036-.011-.058-.015-.028-.006c-.028-.006-.057-.01-.086-.013h-8.948c-.559.002-1.011.454-1.015 1.012v20.377c0 .561.454 1.017 1.015 1.019h16.306.004c1.013 0 1.955-.304 2.74-.827l-.018.011 2.102 2.102c.181.166.423.268.689.268.563 0 1.019-.456 1.019-1.019 0-.266-.102-.508-.269-.689l.001.001zm-3.325-4.827c0 1.625-1.318 2.943-2.943 2.943s-2.943-1.318-2.943-2.943 1.318-2.943 2.943-2.943c1.624.002 2.941 1.318 2.943 2.942zm-9.396-13.956 3.993 3.994h-3.993zm-8.83-1.44h6.793v6.453c0 .563.456 1.019 1.019 1.019h6.453v3.05c-2.278.487-3.962 2.483-3.962 4.873 0 1.109.362 2.133.975 2.96l-.01-.013h-11.269z\"/></svg>\r\n              <h5 className=\"docTitle\">{doc.title}</h5>\r\n              <span className=\"docPercentage\">{`${parseInt(doc.similarity * 100)}%`}</span>\r\n            </a>\r\n          })}\r\n        </div> :\r\n        <AnalysisLoader height='200px' />\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DocumentList;","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\SendFeedback.js",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":55,"column":6,"nodeType":"108","endLine":55,"endColumn":8,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":18,"column":6,"nodeType":"108","endLine":18,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":128,"column":141,"nodeType":"118","endLine":128,"endColumn":218},{"ruleId":"116","severity":1,"message":"117","line":128,"column":245,"nodeType":"118","endLine":128,"endColumn":322},{"ruleId":"116","severity":1,"message":"117","line":128,"column":416,"nodeType":"118","endLine":128,"endColumn":493},{"ruleId":"106","severity":1,"message":"119","line":31,"column":6,"nodeType":"108","endLine":31,"endColumn":8,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":30,"column":6,"nodeType":"108","endLine":30,"endColumn":8,"suggestions":"122"},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","replacedBy":"124"},{"ruleId":"116","severity":1,"message":"117","line":11,"column":20,"nodeType":"118","endLine":11,"endColumn":73},{"ruleId":"112","severity":1,"message":"125","line":18,"column":11,"nodeType":"114","messageId":"115","endLine":18,"endColumn":22},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userToken'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useCallback has missing dependencies: 'setFile' and 'setInvalid'. Either include them or remove the dependency array. If 'setInvalid' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["129"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'authCookie.mesoc_local_user'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has missing dependencies: 'match.params.analysisKey' and 'match.params.analysisType'. Either include them or remove the dependency array.",["131"],["126"],["127"],"'eventTarget' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [userToken]",{"range":"140","text":"141"},"Update the dependencies array to be: [setFile, setInvalid]",{"range":"142","text":"143"},"Update the dependencies array to be: [authCookie.mesoc_local_user]",{"range":"144","text":"145"},"Update the dependencies array to be: [match.params.analysisKey, match.params.analysisType]",{"range":"146","text":"147"},[1764,1766],"[userToken]",[523,525],"[setFile, setInvalid]",[993,995],"[authCookie.mesoc_local_user]",[1098,1100],"[match.params.analysisKey, match.params.analysisType]"]