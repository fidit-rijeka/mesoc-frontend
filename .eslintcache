[{"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\reportWebVitals.js":"1","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\MyDocuments.js":"2","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\infoModal.js":"3","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\UploadDocument.js":"4","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navSearchField.js":"5","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\fileDropzone.js":"6","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\sidenav.js":"7","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\filePreview.js":"8"},{"size":362,"mtime":1607023625345,"results":"9","hashOfConfig":"10"},{"size":6384,"mtime":1607373210962,"results":"11","hashOfConfig":"10"},{"size":679,"mtime":1607201171668,"results":"12","hashOfConfig":"10"},{"size":4888,"mtime":1607551016694,"results":"13","hashOfConfig":"10"},{"size":402,"mtime":1607111692950,"results":"14","hashOfConfig":"10"},{"size":1042,"mtime":1607551090181,"results":"15","hashOfConfig":"10"},{"size":4287,"mtime":1607110208188,"results":"16","hashOfConfig":"10"},{"size":309,"mtime":1607551042192,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wfmgou",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\reportWebVitals.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\MyDocuments.js",["35"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Card, CardBody, CardTitle, CardSubtitle, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport classnames from 'classnames';\r\n\r\nimport Sidenav from '../components/sidenav';\r\nimport InfoModal from '../components/infoModal';\r\n\r\n// TODO\r\n// Display \"you have to sign in to use this part of application\" message when not signed in\r\n\r\nconst MyDocuments = () => {\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [infoModalOpen, setInfoModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [modalText, setModalText] = useState(null);\r\n  const [docsData, setDocsData] = useState(['For your data we produced no results.', 'Your document was rejected and will now be moved to \"failed documents\" tab']);\r\n\r\n  useEffect(() => {\r\n    // TODO\r\n    // Fetch documents data here and put that data into state (if signed in)\r\n    // Use setDocsDatafunction\r\n  }, []);\r\n\r\n  // First argument: if in \"Active documents\" -> 'reject'\r\n  //                 if in \"Deleted documents\" -> 'inform'\r\n  // Second argument: index of rendered document\r\n  const openModal = (type, selected) => {\r\n    setModalType(type);\r\n    setModalText(docsData[selected]);\r\n    setInfoModalOpen(true);\r\n  };\r\n\r\n  return(\r\n    <div className=\"pageWrapper\">\r\n      <div className=\"sidenavArea\">\r\n        <Sidenav />\r\n      </div>\r\n      <div className=\"pageArea\">\r\n\r\n        <InfoModal type={modalType} text={modalText} modalOpen={infoModalOpen} setModalOpen={setInfoModalOpen} />\r\n\r\n        <InfoModal type={modalType} text={modalText} modalOpen={infoModalOpen} setModalOpen={setInfoModalOpen} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>My documents</CardTitle>\r\n            <CardSubtitle className=\"mb-3\">Here you can find all of your documents you have uploaded over time.</CardSubtitle>\r\n\r\n            <Nav tabs className=\"nav-tabs-custom\">\r\n              <NavItem>\r\n                <NavLink\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={classnames({\r\n                    active: activeTab === '1'\r\n                  })}\r\n                  onClick={() => setActiveTab('1')}\r\n                >\r\n                  <span className=\"d-none d-sm-block\">Active documents</span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={classnames({\r\n                    active: activeTab === '2'\r\n                  })}\r\n                  onClick={() => setActiveTab('2')}\r\n                >\r\n                  <span className=\"d-none d-sm-block\">Failed documents</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n\r\n            {/* TODO\r\n            Fetch and display tables from backend server.\r\n            Create view for \"you haven't uploaded any documents\" and \"you haven't deleted any documents\" */}\r\n\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"table-responsive\">\r\n                  <Table className=\"table mb-0\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Uploaded</th>\r\n                        <th>Language</th>\r\n                        <th>Location</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Text about wine</td>\r\n                        <td>21/12/2021</td>\r\n                        <td>English</td>\r\n                        <td>Malta</td>\r\n                        <td>\r\n                          <button className=\"btn btn-primary wawes-effect waves-light\">Open</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Text about something...</td>\r\n                        <td>21/12/2021</td>\r\n                        <td>English</td>\r\n                        <td>Rijeka, Croatia</td>\r\n                        <td>\r\n                          <button className=\"btn btn-primary wawes-effect waves-light\" disabled>Procesing</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Text about wine</td>\r\n                        <td>21/12/2021</td>\r\n                        <td>English</td>\r\n                        <td>Malta</td>\r\n                        <td>\r\n                          <button onClick={() => openModal('reject', 1)} className=\"btn btn-danger wawes-effect waves-light\">Failed</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <div className=\"table-responsive\">\r\n                  <Table className=\"table mb-0\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Uploaded</th>\r\n                        <th>Language</th>\r\n                        <th>Location</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Test file</td>\r\n                        <td>21/12/2021</td>\r\n                        <td>English</td>\r\n                        <td>Malta</td>\r\n                        <td>\r\n                          <button onClick={() => openModal('inform', 0)} className=\"btn btn-info wawes-effect waves-light\">Info</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDocuments;","D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\infoModal.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\pages\\UploadDocument.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\navSearchField.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\fileDropzone.js",["36"],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\sidenav.js",[],"D:\\Swe\\Web Dev\\mesoc-frontend\\src\\components\\filePreview.js",[],{"ruleId":"37","severity":1,"message":"38","line":17,"column":20,"nodeType":"39","messageId":"40","endLine":17,"endColumn":31},{"ruleId":"41","severity":1,"message":"42","line":19,"column":6,"nodeType":"43","endLine":19,"endColumn":8,"suggestions":"44"},"no-unused-vars","'setDocsData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'setFile' and 'setInvalid'. Either include them or remove the dependency array. If 'setFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [setFile, setInvalid]",{"range":"48","text":"49"},[589,591],"[setFile, setInvalid]"]